@model PropertyRentalManagementSystem.Models.Building

@{
    ViewBag.Title = "Edit Building";
}

<h2>Edit Building</h2>

@using (Html.BeginForm("Edit", "Buildings", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Building</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Building Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.BuildingName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BuildingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Address -->
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- City -->
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Postal Code -->
        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Date Listed -->
        <div class="form-group">
            @Html.LabelFor(model => model.DateListed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateListed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateListed, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Owner Dropdown -->
        <div class="form-group">
            @Html.Label("Owner", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OwnerId", (SelectList)ViewBag.OwnerList, "Select Owner", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Image Upload -->
        <div class="form-group">
            @Html.Label("Building Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imageUpload" />
                @if (!string.IsNullOrEmpty(Model.ImagePath))
                {
                    <div>
                        <p>Current Image:</p>
                        <img src="@Url.Content(Model.ImagePath)" alt="Building Image" style="max-width:200px; max-height:200px;" />
                    </div>
                }
            </div>
        </div>

        <!-- Submit and Cancel Buttons -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a href="@Url.Action("Index", "Buildings")" class="btn btn-default">Cancel</a>
            </div>
        </div>
    </div>
}

