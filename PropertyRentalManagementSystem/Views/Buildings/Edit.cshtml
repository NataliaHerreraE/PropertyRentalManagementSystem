@model PropertyRentalManagementSystem.Models.Building

@{
    ViewBag.Title = "Edit Building Details";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}


<h2 class="dashboard-title">Edit Building Details</h2>

<!-- Start of the form -->
@using (Html.BeginForm("Edit", "Buildings", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="building-details-card">
        <!-- Display Image (only if there is one) -->
        <div class="building-image-container">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <img src="~/Content/@Model.ImagePath" alt="Building Image" class="building-image" />
            }
            else
            {
                <p>No image available</p>
            }
        </div>

        <!-- File Upload for Image -->
        <div class="form-group">
            <label for="imageUpload">Upload New Image (optional)</label>
            <input type="file" name="imageUpload" class="form-control" />
        </div>

        <!-- Display Building Details for Editing -->
        <div class="building-info">
            <div class="form-group">
                @Html.LabelFor(model => model.BuildingName, "Building Name", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.BuildingName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BuildingName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, "Address", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, "City", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, "Postal Code", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateListed, "Date Listed", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateListed, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.DateListed, "", new { @class = "text-danger" })
                </div>

                @Html.HiddenFor(model => model.BuildingId)

            </div>
        </div>

        <!-- Save and Back Buttons -->
        <div class="details-actions">
            <input type="submit" value="Save Changes" class="btn btn-warning" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}
