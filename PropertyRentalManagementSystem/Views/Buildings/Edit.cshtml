@model PropertyRentalManagementSystem.Models.Building

@{
    ViewBag.Title = "Edit Building";
}

<h2>Edit Building</h2>

@using (Html.BeginForm("Edit", "Buildings", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Building</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <!-- Hidden field for BuildingId -->
    @Html.HiddenFor(model => model.BuildingId)

    <!-- Building Name -->
    <div class="form-group">
        @Html.LabelFor(model => model.BuildingName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BuildingName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BuildingName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Address -->
    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- City -->
    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Postal Code -->
    <div class="form-group">
        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Date Listed -->
    <div class="form-group">
        @Html.LabelFor(model => model.DateListed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.DateListed, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(model => model.DateListed, "", new { @class = "text-danger" })
        </div>
    </div>


    <!-- Owner Dropdown -->
    <div class="form-group">
        @Html.Label("Owner", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("OwnerId", ViewBag.OwnerList as SelectList, "Select Owner", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
        </div>
    </div>


    <!-- Image Upload -->
    <div class="form-group">
        @Html.Label("Building Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="imageUpload" />
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <div>
                    <p>Current Image:</p>
                    <img src="~/Content/@Model.ImagePath" alt="Building Image" class="building-image" style="max-width:200px; max-height:200px;" />
                </div>
            }
        </div>
    </div>

    <!-- Save and Back Buttons -->
    <div class="details-actions">
        <input type="submit" value="Save Changes" class="btn btn-warning" />
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
    </div>
</div>
}
