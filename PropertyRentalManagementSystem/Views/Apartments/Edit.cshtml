@model PropertyRentalManagementSystem.Models.Apartment

@{
    ViewBag.Title = "Edit Apartment Details";
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<h2 class="dashboard-title">Edit Apartment Details</h2>

<!-- Start of the form -->
@using (Html.BeginForm("Edit", "Apartments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="apartment-details-card">
        <!-- Display Image (only if there is one) -->
        <div class="apartment-image-container">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <img src="~/Content/@Model.ImagePath" alt="Apartment Image" class="apartment-image" />
            }
            else
            {
                <p>No image available</p>
            }
        </div>

        <!-- File Upload for Image -->
        <div class="form-group">
            <label for="imageUpload">Upload New Image (optional)</label>
            <input type="file" name="imageUpload" class="form-control" />
        </div>

        <!-- Display Apartment Details for Editing -->
        <div class="apartment-info">
            <div class="form-group">
                @Html.LabelFor(model => model.AppartmentNumber, "Apartment Number")
                @Html.TextBoxFor(model => model.AppartmentNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppartmentNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rooms, "Rooms")
                @Html.TextBoxFor(model => model.Rooms, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Rooms, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bathrooms, "Bathrooms")
                @Html.TextBoxFor(model => model.Bathrooms, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Bathrooms, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, "Price")
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateListed, "Date Listed")
                @Html.TextBoxFor(model => model.DateListed, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.DateListed, "", new { @class = "text-danger" })
            </div>

            <!-- Display Current Status -->
            <div class="form-group">
                <label>Current Status: <strong>@(Model.Status != null ? Model.Status.StatusName : "Not assigned")</strong></label>
                @Html.LabelFor(model => model.StatusId, "Status")
                @Html.DropDownListFor(model => model.StatusId, (SelectList)ViewBag.StatusId, "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>

            <!-- Display Current Building -->
            <div class="form-group">
                <label>Current Building: <strong>@(Model.Building != null ? Model.Building.BuildingName : "Not assigned")</strong></label>
                @Html.LabelFor(model => model.BuildingId, "Building")
                @Html.DropDownListFor(model => model.BuildingId, (SelectList)ViewBag.BuildingId, "Select Building", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuildingId, "", new { @class = "text-danger" })
            </div>


            @Html.HiddenFor(model => model.ApartmentId)
        </div>

        <!-- Save and Back Buttons -->
        <div class="details-actions">
            <input type="submit" value="Save Changes" class="btn btn-warning" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}
