@model PropertyRentalManagementSystem.Models.Apartment

@{
    ViewBag.Title = "Create Apartment";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<h2>Create Apartment</h2>

@using (Html.BeginForm("Create", "Apartments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Apartment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Apartment Number -->
        <div class="form-group">
            @Html.LabelFor(model => model.AppartmentNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppartmentNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppartmentNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Rooms -->
        <div class="form-group">
            @Html.LabelFor(model => model.Rooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rooms, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Bathrooms -->
        <div class="form-group">
            @Html.LabelFor(model => model.Bathrooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bathrooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bathrooms, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Price -->
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Date Listed -->
        <div class="form-group">
            @Html.LabelFor(model => model.DateListed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateListed, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DateListed, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Building Dropdown -->
        <div class="form-group">
            @Html.Label("Building", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BuildingId, (SelectList)ViewBag.BuildingId, "Select Building", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuildingId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Status Dropdown -->
        <div class="form-group">
            @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StatusId, (SelectList)ViewBag.StatusId, "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Image Upload -->
        <div class="form-group">
            @Html.Label("Image Upload", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imageUpload" class="form-control" />
            </div>
        </div>

        <!-- Submit Button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" /> <!-- Styled button for creating -->
            </div>
        </div>

    </div>
}

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" }) <!-- Styled back button -->
    </div>
</div>
